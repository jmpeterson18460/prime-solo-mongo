//create a collection named orders
db.createCollection('orders');
//set var orders = db.orders

//inserted 3 documents of orders:
orders.insert({orderDate: new Date('2017-02-03'), orderTotal: 25.98, lineItems: 
[{unitPrice: 12.99, quantity: 2, productName: "Unlimited Pasta Bowl"}]});

orders.insert({orderDate: new Date('2017-04-04'), orderTotal: 11.97, lineItems: 
[{unitPrice: 7.99, quantity: 1, productName: "Wreck Sandwich"},{unitPrice: 2.99,
quantity: 1, productName: "Oatmeal Chocolatechip cookie"}]});

orders.insert({orderDate: new Date('2017-01-02'), orderTotal: 8.67, lineItems: 
[{unitPrice: 8.67, quantity: 1, productName: "Steak Burrito"}]});

//find all the orders and make them look pretty:
orders.find().pretty()

//find all orders with and orderDate that is after 1/31/2017
orders.find({'orderDate': {$gt: new Date('2017-01-31')}})

//Change the orderTotal from 2/3/2017 to 63 dollars
orders.update({orderDate: new Date('2017-02-03')}, {$set: {orderTotal: 63.00}})

//Add another lineItem to the order from 4/4/2017
orders.update({orderDate: new Date('2017-04-04')},{$push: {lineItems: 
{unitPrice: 17.99, quantity: 1, productName: "Feast for One"}}})

//Change the first lineItem from 01/02/2017 to be for 2 'transitor radio's
orders.update({orderDate: new Date('2017-01-02')}, {$set: {"lineItems.0.quantity": 2}})
orders.update({orderDate: new Date('2017-01-02')}, {$set: {"lineItems.0.productName": "transitor radio's"}})

//find orders with lineItems that have a quantity <10 but >2
orders.find({lineItems: {$elemMatch: {quantity: {$gt: 2, $lt: 10}}}})